<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.bookspresso.mapper.debate.DebateMapper">
    <!--    토론만들기 INSERT 쿼리-->
    <insert id="insertDebateInpo">
        <selectKey resultType="long" keyProperty="debateId" order="BEFORE">
            select SEQ_DEBATE_INFO.nextval from dual
        </selectKey>
        INSERT INTO TBL_DEBATE(DEBATE_ID,MEETING_ID,DEBATE_TYPE_ID,TITLE,OUTLINE,GROUP_START_DATE,GROUP_END_DATE,DEBATE_START_DATE,DEBATE_END_DATE)
        VALUES (#{debateId},#{meetingId},#{debateTypeId},#{title},#{outLine},#{groupStartDate},#{groupEndDate},#{debateStartDate},#{debateEndDate})
    </insert>
    <!--debateinpo의 책검색api 쿼리-->
    <select id="selectbookinpo">
     SELECT ISBN13,TITLE,AUTHOR,DESCRIPTION,PUBDATE,COVER
                  FROM TBL_BOOK
                     WHERE TITLE LIKE '%' || #{title} || '%'
     ORDER BY TITLE DESC
    </select>
    <select id="selectBookTotal">
        SELECT COUNT(ISBN13)
        FROM TBL_BOOK
        WHERE TITLE LIKE '%' || #{title} || '%'
    </select>
    <!-- MemberDebate 다대다 연결 insert-->
    <insert id="insertMemberDebate">
        <selectKey resultType="long" keyProperty="memDebInfo" order="BEFORE">
            select SEQ_MEMBER_DEBATE.nextval from dual
        </selectKey>
        INSERT INTO TBL_MEMBER_DEBATE(MEM_DEB_INFO, DEBATE_ID, MEMBER_ID)
        VALUES (#{memDebInfo},#{debateId},#{memberId})
    </insert>
    <!-- DebateBook 다대다 연결 insert-->
    <insert id="insertDebateBook">
        <selectKey resultType="long" keyProperty="debateBookId" order="BEFORE">
            select SEQ_DEBATE_BOOK.nextval from dual
        </selectKey>
        INSERT INTO TBL_DEBATE_BOOK(DEBATE_BOOK_ID, DEBATE_ID, ISBN13,MEMBER_ID)
        VALUES (#{debateBookId},#{debateId},#{isbn13},#{memberId})
    </insert>
<!--    토론메인 페이지에서 각요소들의 정보를 가져오는 쿼리 페이징 처리-->
    <select id="selectListWithPage">
        SELECT  DEBATE_ID, MEETING_TYPE, DEBATE_TYPE, TITLE, DESCRIPTION, DEBATE_START_DATE, DEBATE_END_DATE, DEBATE_BOOK_ID, ISBN13, COVER
        FROM(SELECT ROWNUM AS RNUM,DEBATE_ID, MEETING_TYPE, DEBATE_TYPE, TITLE, DESCRIPTION, DEBATE_START_DATE, DEBATE_END_DATE, DEBATE_BOOK_ID, ISBN13, COVER
          FROM(SELECT I.DEBATE_ID,T.MEETING_TYPE,P.DEBATE_TYPE, I.TITLE,B.DESCRIPTION,
                 TO_CHAR(I.DEBATE_START_DATE,'YYYY-MM-DD')AS DEBATE_START_DATE, TO_CHAR(I.DEBATE_END_DATE,'YYYY-MM-DD')AS DEBATE_END_DATE,
                              DB.DEBATE_BOOK_ID,DB.ISBN13,B.COVER
                 FROM TBL_DEBATE I JOIN TBL_MEETING_TYPE T
                                        ON I.MEETING_ID = T.MEETING_ID
                                 JOIN TBL_DEBATE_TYPE P
                                      ON I.DEBATE_TYPE_ID = P.DEBATE_TYPE_ID
                                 JOIN TBL_DEBATE_BOOK DB
                                        ON I.DEBATE_ID = DB.DEBATE_ID
                                 JOIN TBL_BOOK B
                                         ON DB.ISBN13 = B.ISBN13
            <![CDATA[ WHERE (MEETING_TYPE='온라인' OR MEETING_TYPE='오프라인') AND DEBATE_END_DATE > TO_CHAR(SYSDATE, 'YYYY-MM-DD') ]]>
                                         ORDER BY DEBATE_ID DESC
                                      )
                             <![CDATA[
                              WHERE ROWNUM <= #{page} * #{amount}
                              ]]>
               )
        WHERE RNUM > (#{page} - 1) * #{amount}
    </select>
<!--    페이징 처리를 위한 전체 토론검색-->
<select id="selectTotal">
    SELECT COUNT(DEBATE_ID)FROM TBL_DEBATE
</select>

</mapper>













